<!------------------------------------------------------------------------------
Copyright (c) 2023-2024 Starion Group S.A.

    Authors: Justine Veirier d'aiguebonne, Sam Gerené, Alex Vorobiev, Alexander van Delft

    This file is part of CDP4-COMET WEB Community Edition
     The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.

    The CDP4-COMET WEB Community Edition is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public
    License as published by the Free Software Foundation; either
    version 3 of the License, or (at your option) any later version.

    The CDP4-COMET WEB Community Edition is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->

@using CDP4Common.EngineeringModelData
@using COMETwebapp.Utilities
@inherits HaveValueSetsChartData

<div class="width-100">
    <div class="row">
        <div class="col-9">
            <h3 class="text-align-end">Published Parameters</h3>
        </div>
        <div class="col text-align-start p-0">
            <Tooltip MarginBottom="bottom-60" Text="Publishable parameter : actual value not equal to published value">
                <button type="button" class="btn btn-secondary btn-tooltip"><span class="oi oi-info"></span></button>
            </Tooltip>
        </div>
    </div>
    @if(this.ValueSets != null)
    {
        <DxChart Data="@this.ValueSets" CustomizeSeriesPoint="@PreparePointLabel">
            <DxChartFullStackedBarSeries Color="System.Drawing.Color.LightCoral" Name="@WebAppConstantValues.PublishableParameters" Filter="@((ParameterValueSetBase p) => !p.Published.SequenceEqual(p.ActualValue))"
                                        ArgumentField="@(p => p.Owner.ShortName)" ValueField="@(p => 1)"
                                        AggregationMethod="Enumerable.Sum">
                <DxChartSeriesLabel Position="RelativePosition.Inside"/>
            </DxChartFullStackedBarSeries>
            <DxChartFullStackedBarSeries Color="System.Drawing.Color.SteelBlue" Name="@WebAppConstantValues.PublishedParameters" Filter="@((ParameterValueSetBase p) => p.Published.SequenceEqual(p.ActualValue))"
                                        ArgumentField="@(p => p.Owner.ShortName)" ValueField="@(p => 1)"
                                        AggregationMethod="Enumerable.Sum">
                <DxChartSeriesLabel Position="RelativePosition.Inside" />
            </DxChartFullStackedBarSeries>
            <DxChartLegend Visible="false" />
            <DxChartTooltip Enabled="true" Position="RelativePosition.Inside">
                <div class="small-margin">
                    <button class="card-btn" @onclick="@(() => this.AccessData(context.Point))">
                        More
                    </button>
                </div>
            </DxChartTooltip>
        </DxChart>

        <DxChart Data="@this.ValueSets" CssClass="justify-content-center width-100">
            <DxChartTooltip Enabled="true" Position="RelativePosition.Inside">
                @{
                    var total = this.ValueSets.Count(d => d.Owner.ShortName.Equals(@context.Point.Argument));
                    var number = Math.Round((double)this.CountValueSetPerDomain(@context.Point.SeriesName, @context.Point.Argument) / total * 100);
                }
                <div class="small-margin">
                    @if (!double.IsNaN(number))
                    {
                        <button class="card-btn" @onclick="@(() => this.AccessData(context.Point))">
                            <div>@number %</div>
                        </button>
                    }
                    else
                    {
                        <div>-</div>
                    }

                </div>
            </DxChartTooltip>
            <DxChartStackedBarSeries Color="System.Drawing.Color.LightCoral" Name="Publishable Parameters" Filter="@((ParameterValueSetBase p) => !p.Published.SequenceEqual(p.ActualValue))"
                                        ArgumentField="@(p => p.Owner.ShortName)" ValueField="@(p => 1)"
                                        AggregationMethod="Enumerable.Sum" />
            <DxChartStackedBarSeries Color="System.Drawing.Color.SteelBlue" Name="Published Parameters" Filter="@((ParameterValueSetBase p) => p.Published.SequenceEqual(p.ActualValue))"
                                        ArgumentField="@(p => p.Owner.ShortName)" ValueField="@(p => 1)"
                                        AggregationMethod="Enumerable.Sum" />
            <DxChartLegend Position="RelativePosition.Outside" HorizontalAlignment="HorizontalAlignment.Center" />
        </DxChart>   
    }
</div>

