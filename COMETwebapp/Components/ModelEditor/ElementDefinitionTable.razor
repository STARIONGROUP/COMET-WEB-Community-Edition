<!------------------------------------------------------------------------------
// Copyright (c) 2023-2024 Starion Group S.A.
//
//    Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Théate Antoine, João Rua
//
//    This file is part of CDP4-COMET WEB Community Edition
//    The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.
//
//    The CDP4-COMET WEB Community Edition is free software; you can redistribute it and/or
//    modify it under the terms of the GNU Affero General Public
//    License as published by the Free Software Foundation; either
//    version 3 of the License, or (at your option) any later version.
//
//    The CDP4-COMET WEB Community Edition is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
//    Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->

@using COMETwebapp.ViewModels.Components.SystemRepresentation.Rows;
@using COMETwebapp.ViewModels.Components.ModelEditor.Rows
@inherits SingleIterationApplicationBase<COMETwebapp.ViewModels.Components.ModelEditor.IElementDefinitionTableViewModel>;

<LoadingComponent IsVisible="@this.ViewModel.IsLoading">
    <ValidationMessageComponent ValidationMessage="@(this.ErrorMessage)" />
    <div style="display: flex">
        <div>
            <h4>Source Model</h4>
            <div class="model-elements-column sticky-scrollable-column">
                <DxGrid @ref="this.SecondGrid"
                        Data="this.ViewModel.RowsSource"
                        ShowAllRows="true"
                        CssClass="second-grid"
                        AllowSort="false"
                        RowClick="this.OnElementSelected"
                        AllowSelectRowByClick="true"
                        SelectionMode="GridSelectionMode.Single"
                        VerticalScrollBarMode="ScrollBarMode.Visible"
                        CustomizeElement="@(OnCustomizeElement)">
                    <Columns>
                        <DxGridDataColumn Caption="Element Definition" FieldName="@nameof(ElementDefinitionRowViewModel.ElementDefinitionName)" GroupIndex="0" GroupInterval="GridColumnGroupInterval.Value" />
                        <DxGridDataColumn Caption="Element Usage" FieldName="@nameof(ElementDefinitionRowViewModel.ElementUsageName)" />
                        <DxGridDataColumn FieldName="@nameof(ElementDefinitionRowViewModel.IsTopElement)" Visible="false"/>
                    </Columns>
                </DxGrid>
            </div>
        </div>
        <div style="padding-left: 10px">
            <h4>Target Model</h4>
            <div class="model-elements-column sticky-scrollable-column">
                <DxGrid @ref="this.FirstGrid"
                        Data="this.ViewModel.RowsTarget"
                        ShowAllRows="true"
                        CssClass="first-grid"
                        AllowSort="false"
                        RowClick="this.OnElementSelected"
                        AllowSelectRowByClick="true"
                        SelectionMode="GridSelectionMode.Single"
                        VerticalScrollBarMode="ScrollBarMode.Visible"
                        CustomizeElement="@(OnCustomizeElement)">
                    <Columns>
                        <DxGridDataColumn Caption="Element Definition" FieldName="@nameof(ElementDefinitionRowViewModel.ElementDefinitionName)" GroupIndex="0" GroupInterval="GridColumnGroupInterval.Value"/>
                        <DxGridDataColumn Caption="Element Usage" FieldName="@nameof(ElementDefinitionRowViewModel.ElementUsageName)"/>
                    </Columns>
                </DxGrid>
            </div>
        </div>

        <div style="width: 1300px;">
            <DataItemDetailsComponent IsSelected="@(this.ViewModel.SelectedElementDefinition is not null)"
                                      NotSelectedText="Select an item to view or edit"
                                      Width="100%">
                <div class="mb-2">
                    <h4 class="d-inline">Panel Editor</h4>
                    <div class="float-end">
                        @if (this.ViewModel.SelectedElementDefinition is not null)
                        {
                            <DxButton Id="addParameter" Text="Add Parameter" IconCssClass="oi oi-plus" Click="@(this.ViewModel.OpenAddParameterPopup)"/>
                        }

                        <DxButton Id="addElementDefinition" Text="Add Element Definition" IconCssClass="oi oi-plus" Click="@this.ViewModel.OpenCreateElementDefinitionCreationPopup"/>
                    </div>
                </div>
                <div style="height: 73vh!important;" class="sticky-scrollable-column d-flex justify-content-between">
                        <DetailsPanelEditor ViewModel="this.ViewModel.ElementDefinitionDetailsViewModel"/>
                </div>
            </DataItemDetailsComponent>
        </div>
    </div>
    <DxPopup CloseOnOutsideClick="false" HeaderText="Create Element Definition" @bind-Visible="@this.ViewModel.IsOnCreationMode" Width="40vw">
        <Content>
            <ElementDefinitionCreation ViewModel="@this.ViewModel.ElementDefinitionCreationViewModel"/>
        </Content>
    </DxPopup>
    
    <DxPopup CloseOnOutsideClick="false" HeaderText="Add Parameter" @bind-Visible="@this.ViewModel.IsOnAddingParameterMode" Width="40vw">
        <Content>
            <AddParameter ViewModel="@this.ViewModel.AddParameterViewModel"/>
        </Content>
    </DxPopup>
</LoadingComponent>