<!------------------------------------------------------------------------------
Copyright (c) 2023-2024 RHEA System S.A.
    Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Antoine Théate, João Rua
    This file is part of CDP4-COMET WEB Community Edition
     The CDP4-COMET WEB Community Edition is the RHEA Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.
    The CDP4-COMET WEB Community Edition is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public
    License as published by the Free Software Foundation; either
    version 3 of the License, or (at your option) any later version.
    The CDP4-COMET WEB Community Edition is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Affero General Public License for more details.
    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->
@using COMETwebapp.ViewModels.Components.SiteDirectory.Rows
@inherits COMETwebapp.Components.Common.SelectedDataItemBase<CDP4Common.SiteDirectoryData.Participant, ParticipantRowViewModel>

<LoadingComponent IsVisible="@(this.ViewModel.IsLoading)">
    <DxGrid @ref="this.Grid"
            Data="this.ViewModel.Rows.Items"
            ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
            ShowSearchBox="true"
            SearchBoxNullText="Search for a participant..."
            PopupEditFormCssClass="pw-800"
            PopupEditFormHeaderText="Participant (UNDER DEV)"
            CustomizeEditModel="this.CustomizeEditThing"
            EditMode="GridEditMode.PopupEditForm"
            EditModelSaving="@(() => this.OnEditThingSaving())"
            PageSize="20"
            PagerNavigationMode="PagerNavigationMode.Auto"
            PageSizeSelectorVisible="true"
            PageSizeSelectorItems="@(new int[] { 20,35,50 })"
            PageSizeSelectorAllRowsItemVisible="true">
        <Columns>
            <DxGridDataColumn FieldName="@nameof(ParticipantRowViewModel.Name)" MinWidth="150" />
            <DxGridDataColumn FieldName="@nameof(ParticipantRowViewModel.Organization)" MinWidth="80" SearchEnabled="false" />
            <DxGridDataColumn FieldName="@nameof(ParticipantRowViewModel.Role)" MinWidth="80" SearchEnabled="false" />
            <DxGridCommandColumn Width="200px" EditButtonVisible="false">
                <HeaderTemplate>
                    <DxButton Id="addParticipantButton" Text="Add Participant" IconCssClass="oi oi-plus" Click="() => this.Grid.StartEditNewRowAsync()" />
                </HeaderTemplate>
                <CellDisplayTemplate>
                    @{
                        var row = (ParticipantRowViewModel)context.DataItem;

                        <DxButton Id="editParticipantButton"
                                  Text="Edit"
                                  Click="@(() => this.Grid.StartEditRowAsync(context.VisibleIndex))"
                                  Enabled="@(row.IsAllowedToWrite)"/>

                        <DxButton Id="deleteParticipantButton"
                                  Text="Delete"
                                  Click="() => this.ViewModel.OnDeleteButtonClick(row)"
                                  Enabled="@(row.IsAllowedToWrite)"/>
                    }
                </CellDisplayTemplate>
            </DxGridCommandColumn>
        </Columns>

        <EditFormTemplate Context="EditFormContext">
            <DxFormLayout CssClass="w-100">
                <DxFormLayoutItem Caption="Shortname:" ColSpanMd="10">
                    <DxTextBox @bind-Text="@this.ViewModel.Thing.Person.Name"/>
                </DxFormLayoutItem>
            </DxFormLayout>
            <ValidationSummary/>
        </EditFormTemplate>
        
        <CustomValidators>
            <FluentValidationValidator />
        </CustomValidators>

    </DxGrid>
</LoadingComponent>

<DxPopup @bind-Visible="@this.ViewModel.IsOnDeletionMode" HeaderText="Please confirm" Width="auto" CloseOnOutsideClick="false">
    @this.ViewModel.PopupDialog
    <div class="dxbl-grid-confirm-dialog-buttons">
        <DxButton Text="Cancel " RenderStyle="ButtonRenderStyle.Success" Click="@this.ViewModel.OnCancelPopupButtonClick" />
        <DxButton Text="Confirm" RenderStyle="ButtonRenderStyle.Danger" Click="@this.ViewModel.OnConfirmPopupButtonClick" />
    </div>
</DxPopup>
