<!------------------------------------------------------------------------------
Copyright (c) 2023-2024 RHEA System S.A.
    Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Antoine Théate, João Rua
    This file is part of CDP4-COMET WEB Community Edition
     The CDP4-COMET WEB Community Edition is the RHEA Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.
    The CDP4-COMET WEB Community Edition is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public
    License as published by the Free Software Foundation; either
    version 3 of the License, or (at your option) any later version.
    The CDP4-COMET WEB Community Edition is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Affero General Public License for more details.
    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->
@inherits SelectedDeprecatableDataItemBase<ParticipantRole, ParticipantRoleRowViewModel>

<LoadingComponent IsVisible="@(this.ViewModel.IsLoading)">
    <div style="display: flex; justify-content: space-between;">
        <DxGrid @ref="this.Grid"
                Data="this.ViewModel.Rows.Items"
                ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                ShowSearchBox="true"
                SearchBoxNullText="Search for a participant role..."
                AllowSelectRowByClick="true"
                SelectedDataItemChanged="@(row => this.OnSelectedDataItemChanged((ParticipantRoleRowViewModel)row))"
                PopupEditFormCssClass="pw-800"
                PopupEditFormHeaderText="Participant Role"
                CustomizeElement="DisableDeprecatedThing"
                CustomizeEditModel="this.CustomizeEditThing"
                EditMode="GridEditMode.PopupEditForm"
                EditModelSaving="@(() => this.OnEditThingSaving())"
                PageSize="20"
                PagerNavigationMode="PagerNavigationMode.Auto"
                PageSizeSelectorVisible="true"
                PageSizeSelectorItems="@(new[] { 20, 35, 50 })"
                PageSizeSelectorAllRowsItemVisible="true"
                CssClass="d-inline">
            <Columns>
                <DxGridDataColumn FieldName="@nameof(ParticipantRoleRowViewModel.Name)" MinWidth="150"/>
                <DxGridDataColumn FieldName="@nameof(ParticipantRoleRowViewModel.ShortName)" MinWidth="80" />
                <DxGridDataColumn FieldName="@nameof(ParticipantRoleRowViewModel.IsDeprecated)" MinWidth="80" Visible="false"/>
                <DxGridCommandColumn Width="200px" EditButtonVisible="false" DeleteButtonVisible="false">
                    <HeaderTemplate>
                        <DxButton Id="addParticipantRoleButton" Text="Add Participant Role" IconCssClass="oi oi-plus" Click="() => this.Grid.StartEditNewRowAsync()"/>
                    </HeaderTemplate>
                </DxGridCommandColumn>
            </Columns>

            <EditFormTemplate Context="EditFormContext">
                <DxFormLayout CssClass="w-100">                    
                    <DxFormLayoutTabPages>

                        <DxFormLayoutTabPage Caption="Basic">
                            <DxFormLayoutItem Caption="Shortname:" ColSpanMd="10">
                                <DxTextBox @bind-Text="@(this.ViewModel.Thing.ShortName)"/>
                            </DxFormLayoutItem>
                            <DxFormLayoutItem Caption="Name:" ColSpanMd="10">
                                <DxTextBox @bind-Text="@(this.ViewModel.Thing.Name)"/>
                            </DxFormLayoutItem>
                        </DxFormLayoutTabPage>

                        <DxFormLayoutTabPage Caption="Permissions" CssClass="overflow-auto max-height-50vh">
                            @foreach (var permission in this.ViewModel.Thing.ParticipantPermission.OrderBy(x => x.ObjectClass.ToString()))
                            {
                                <DxFormLayoutItem Caption="@(permission.ObjectClass.ToString())"
                                                  ColSpanMd="12">
                                    <DxComboBox Data="@this.ViewModel.ParticipantAccessKinds"
                                                @bind-Value="@permission.AccessRight"
                                                CssClass="cw-480"
                                                ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"/>
                                </DxFormLayoutItem>
                            }
                        </DxFormLayoutTabPage>

                    </DxFormLayoutTabPages>
                </DxFormLayout>
                <ValidationSummary/>
            </EditFormTemplate>

            <CustomValidators>
                <FluentValidationValidator/>
            </CustomValidators>

        </DxGrid>
    </div>
    <div class="pb-3"></div>
</LoadingComponent>

<DxPopup @bind-Visible="@(this.ViewModel.IsOnDeprecationMode)" HeaderText="Please confirm" Width="auto" CloseOnOutsideClick="false">
    @(this.ViewModel.PopupDialog)
    <div class="dxbl-grid-confirm-dialog-buttons">
        <DxButton Text="Cancel " RenderStyle="ButtonRenderStyle.Success" Click="@(this.ViewModel.OnCancelPopupButtonClick)"/>
        <DxButton Text="Confirm" RenderStyle="ButtonRenderStyle.Danger" Click="@(this.ViewModel.OnConfirmPopupButtonClick)"/>
    </div>
</DxPopup>