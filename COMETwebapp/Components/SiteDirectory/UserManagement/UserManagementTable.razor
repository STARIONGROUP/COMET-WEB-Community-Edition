<!------------------------------------------------------------------------------
// Copyright (c) 2023-2024 Starion Group S.A.
//
//     Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Théate Antoine, João Rua
//
//     This file is part of CDP4-COMET WEB Community Edition
//      The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.
//
//     The CDP4-COMET WEB Community Edition is free software; you can redistribute it and/or
//     modify it under the terms of the GNU Affero General Public
//     License as published by the Free Software Foundation; either
//     version 3 of the License, or (at your option) any later version.
//
//     The CDP4-COMET WEB Community Edition is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
//     Affero General Public License for more details.
//
//     You should have received a copy of the GNU Affero General Public License
//     along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->
@inherits SelectedDeprecatableDataItemBase<Person, PersonRowViewModel>

<LoadingComponent IsVisible="@(this.ViewModel.IsLoading)">
    <div class="selected-data-item-page">
        <DxGrid @ref="this.Grid"
                Data="this.ViewModel.Rows.Items"
                ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                ShowSearchBox="true"
                SearchBoxNullText="Search for a person..."
                AllowSelectRowByClick="true"
                SelectionMode="GridSelectionMode.Single"
                SelectedDataItemChanged="@(row => this.OnSelectedDataItemChanged((PersonRowViewModel)row))"
                EditFormButtonsVisible="false"
                CustomizeElement="DisableDeprecatedThing"
                PageSize="20"
                PagerNavigationMode="PagerNavigationMode.Auto"
                PageSizeSelectorVisible="true"
                PageSizeSelectorItems="@(new[] { 20, 35, 50 })"
                PageSizeSelectorAllRowsItemVisible="true"
                FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                CustomSummary="CustomSummary"
                CustomizeSummaryDisplayText="CustomizeSummaryDisplayText"
                CssClass="selected-data-item-table">
            <TotalSummary>
                <DxGridSummaryItem SummaryType="GridSummaryItemType.Count" FieldName="IsActive" ValueDisplayFormat="{0} Total"/>
                <DxGridSummaryItem SummaryType="GridSummaryItemType.Custom" Name="Inactive" FieldName="IsActive"/>
            </TotalSummary>
            <Columns>
                <DxGridDataColumn FieldName="@nameof(PersonRowViewModel.Name)" MinWidth="80"/>
                <DxGridDataColumn FieldName="@nameof(PersonRowViewModel.ShortName)" MinWidth="80" SearchEnabled="false"/>
                <DxGridDataColumn FieldName="@nameof(PersonRowViewModel.PersonEmailAddress)" Caption="Email Address" MinWidth="80" SearchEnabled="false"/>
                <DxGridDataColumn FieldName="@nameof(PersonRowViewModel.PersonTelephoneNumber)" Caption="Telephone Number" MinWidth="80" SearchEnabled="false"/>
                <DxGridDataColumn FieldName="@nameof(PersonRowViewModel.Role)" Caption="Role" MinWidth="80" SearchEnabled="false"/>
                <DxGridDataColumn FieldName="@nameof(PersonRowViewModel.IsActive)" UnboundType="GridUnboundColumnType.Boolean" MinWidth="80" SearchEnabled="false">
                    <CellDisplayTemplate>
                        @{
                            var row = (PersonRowViewModel)context.DataItem;

                            <DxCheckBox Id="activatePerson"
                                        CheckedChanged="@((bool value) => this.ViewModel.ActivateOrDeactivatePerson(context, value))"
                                        Checked="(bool)context.Value"
                                        Enabled="row.IsAllowedToWrite"/>
                        }
                    </CellDisplayTemplate>
                </DxGridDataColumn>
                <DxGridDataColumn FieldName="@nameof(PersonRowViewModel.IsDeprecated)" UnboundType="GridUnboundColumnType.Boolean" Visible="false" Caption="Role" MinWidth="40" SearchEnabled="false"/>
            </Columns>
        </DxGrid>

        <DataItemDetailsComponent IsSelected="@(this.IsOnEditMode)"
                                  OnButtonClick="@(this.OnAddThingClick)">

            <UserManagementForm ViewModel="@(this.ViewModel)"
                                @bind-IsVisible="@(this.IsOnEditMode)"
                                ShouldCreate="@(this.ShouldCreateThing)"
                                OnSaved="@(this.OnSaved)"/>
        </DataItemDetailsComponent>
    </div>
</LoadingComponent>
