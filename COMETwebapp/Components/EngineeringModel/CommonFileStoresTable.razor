<!------------------------------------------------------------------------------
Copyright (c) 2023-2024 Starion Group S.A.
    Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Antoine Théate, João Rua
    This file is part of CDP4-COMET WEB Community Edition
     The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.
    The CDP4-COMET WEB Community Edition is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public
    License as published by the Free Software Foundation; either
    version 3 of the License, or (at your option) any later version.
    The CDP4-COMET WEB Community Edition is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Affero General Public License for more details.
    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->
@using COMETwebapp.Components.EngineeringModel.FileStore
@inherits SelectedDataItemBase<CommonFileStore, CommonFileStoreRowViewModel>

<LoadingComponent IsVisible="@(this.ViewModel.IsLoading)">
    <div class="d-flex justify-content-between">
        <DxGrid @ref="this.Grid"
                Data="this.ViewModel.Rows.Items"
                ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                ShowSearchBox="true"
                SearchBoxNullText="Search for a common file store..."
                AllowSelectRowByClick="true"
                SelectionMode="GridSelectionMode.Single"
                SelectedDataItemChanged="@((row) => this.OnSelectedDataItemChanged((CommonFileStoreRowViewModel)row))"
                PopupEditFormCssClass="pw-800"
                PopupEditFormHeaderText="Common File Store"
                CustomizeEditModel="this.CustomizeEditThing"
                EditMode="GridEditMode.PopupEditForm"
                EditFormButtonsVisible="false"
                PageSize="20"
                PagerNavigationMode="PagerNavigationMode.Auto"
                PageSizeSelectorVisible="true"
                PageSizeSelectorItems="@(new int[] { 20, 35, 50 })"
                PageSizeSelectorAllRowsItemVisible="true"
                CssClass="height-fit-content">
            <Columns>
                <DxGridDataColumn FieldName="@nameof(CommonFileStoreRowViewModel.Name)" MinWidth="150" />
                <DxGridDataColumn FieldName="@nameof(CommonFileStoreRowViewModel.CreatedOn)" MinWidth="80" SearchEnabled="false" />
                <DxGridCommandColumn Width="200px" EditButtonVisible="false">
                    <HeaderTemplate>
                        <DxButton Id="addCommonFileStoreButton" Text="Add Common File Store" IconCssClass="oi oi-plus" Click="() => this.Grid.StartEditNewRowAsync()"/>
                    </HeaderTemplate>
                    <CellDisplayTemplate>
                        @{
                            var row = (CommonFileStoreRowViewModel)context.DataItem;

                            <DxButton Id="deleteButton"
                                      Text="Delete"
                                      Click="@(() => this.ViewModel.OnDeleteButtonClick(row))"
                                      Enabled="@(row.IsAllowedToWrite)"/>
                        }
                    </CellDisplayTemplate>
                </DxGridCommandColumn>
            </Columns>

            <EditFormTemplate Context="editFormTemplateContext">
                <CommonFileStoresForm ViewModel="@this.ViewModel"
                                      IsVisible="true"
                                      ShouldCreate="true"
                                      OnSaved="@(() => this.Grid.CancelEditAsync())"
                                      OnCanceled="@(() => this.Grid.CancelEditAsync())"/>
            </EditFormTemplate>
        </DxGrid>
        
        <DataItemDetailsComponent IsSelected="@this.IsOnEditMode">
            <CommonFileStoresForm ViewModel="@this.ViewModel"
                                  @bind-IsVisible="@this.IsOnEditMode"
                                  ShouldCreate="false"/>
            <DxButton Click="this.OnSeeFolderFileStructureClick">
                See Folder-File Structure
            </DxButton>
        </DataItemDetailsComponent>
    </div>
</LoadingComponent>

<DxPopup @bind-Visible="@this.ViewModel.IsOnDeletionMode" HeaderText="Please confirm" Width="auto" CloseOnOutsideClick="false">
    @this.ViewModel.PopupDialog
    <div class="dxbl-grid-confirm-dialog-buttons">
        <DxButton Text="Cancel " RenderStyle="ButtonRenderStyle.Success" Click="@this.ViewModel.OnCancelPopupButtonClick" />
        <DxButton Text="Confirm" RenderStyle="ButtonRenderStyle.Danger" Click="@this.OnConfirmDelete" />
    </div>
</DxPopup>

<DxPopup @bind-Visible="@this.IsFolderFileStructureVisible" HeaderText="Folder-File Structure" Width="50%" CloseOnOutsideClick="false">
    <FolderFileStructure ViewModel="@this.ViewModel.FolderFileStructureViewModel"/>
</DxPopup>
