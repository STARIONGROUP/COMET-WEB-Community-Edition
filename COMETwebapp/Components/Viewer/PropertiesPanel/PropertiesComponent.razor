<!------------------------------------------------------------------------------
Copyright (c) 2023-2024 Starion Group S.A.

    Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar

    This file is part of CDP4-COMET WEB Community Edition
     The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25 Annex A and Annex C.

    The CDP4-COMET WEB Community Edition is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public
    License as published by the Free Software Foundation; either
    version 3 of the License, or (at your option) any later version.

    The CDP4-COMET WEB Community Edition is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see http://www.gnu.org/licenses/.
------------------------------------------------------------------------------->

@using CDP4Dal

<div id="propertiesPanel">

    @if (this.ViewModel.IsVisible)
    {
        var selectedSceneObject = this.ViewModel.SelectionMediator.SelectedSceneObject;
        var title = selectedSceneObject is not null ? selectedSceneObject.ElementBase.Name + " - Properties:" : "Properties";
        var buttonClass = this.ViewModel.ParameterHaveChanges ? "submit-button button-blue" : "submit-button";

        <div id="properties-header">
            <h4 id="properties-title">@title</h4>
            <button @onclick="()=>this.ViewModel.OnSubmit()" class="@buttonClass" disabled="@(!this.ViewModel.ParameterHaveChanges)">Submit</button>
        </div>

        <div id="parameters-section">
            @{
                var parameters = this.ViewModel.ParametersInUse is not null ? this.ViewModel.ParametersInUse : new List<CDP4Common.EngineeringModelData.ParameterBase>();
                @foreach (var parameter in parameters)
                {
                    var classNames = parameter == this.ViewModel.SelectedParameter ? "parameter-item parameter-item-selected" : "parameter-item";
                    <p class="@classNames" @onclick="()=> this.ViewModel.SelectedParameter = parameter">@parameter.ParameterType?.Name</p>
                }
            }
        </div>
    }

    <DetailsComponent ViewModel="this.ViewModel.CreateDetailsComponentViewModel()"/>
</div>
