<!------------------------------------------------------------------------------
// Copyright (c) 2023-2024 Starion Group S.A.
//
//   Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Théate Antoine, João Rua
//
//   This file is part of CDP4-COMET WEB Community Edition
//   The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25
//   Annex A and Annex C.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
------------------------------------------------------------------------------->
@namespace COMETwebapp.Shared.SideBarEntry
@using COMET.Web.Common.Enumerations
@using COMET.Web.Common.Shared.TopMenuEntry
@inherits COMET.Web.Common.Shared.TopMenuEntry.AuthorizedMenuEntry

<ConfirmCancelPopup ViewModel="@(this.ViewModel.ConfirmCancelViewModel)" />

<DxPopup @bind-Visible="@this.ViewModel.IsOnSwitchDomainMode" CloseOnOutsideClick="false" HeaderText="Switch domain" ShowCloseButton="true">
	<SwitchDomain ViewModel="@this.ViewModel.SwitchDomainViewModel"/>
</DxPopup>

<DxPopup @bind-Visible="@this.ViewModel.IsOnOpenIterationMode" CloseOnOutsideClick="false" HeaderText="Open a new Model" ShowCloseButton="true">
	<OpenModel />
</DxPopup>

<DxMenuItem Name="model-entry" 
            Text="@this.ConfigurationService.GetText(TextConfigurationKind.NavigationModelSelectorTitle)" 
            IconCssClass="icon icon-folder" 
            Enabled="@(this.AuthorizedMenuEntryViewModel.IsAuthenticated)">
    <Template>
        <SideBarItem Text="@this.ConfigurationService.GetText(TextConfigurationKind.NavigationModelSelectorTitle)"
                     Enabled="@(this.AuthorizedMenuEntryViewModel.IsAuthenticated)"
                     IconCssClass="icon icon-folder mx-2"
                     Id="user-info-container"
                     DropdownSelector="true"/>
    </Template>
    <Items>
        <DxMenuItem Name="model-entry-open" Text="@this.ConfigurationService.GetText(TextConfigurationKind.ModelOpenButtonCaption)" Click="@this.ViewModel.AskToOpenIteration">
            <TextTemplate Context="contextSwitch">
                <span id="@contextSwitch.Name">
                    @contextSwitch.Text
                </span>
            </TextTemplate>
        </DxMenuItem>
        @{
            var rowIndex = 0;

            foreach (var iteration in this.ViewModel.SessionService.OpenIterations.Items)
            {
                var index = rowIndex;

                <ModelMenuRow ViewModel="@(this.ViewModel.CreateRowViewModel(iteration))"
                              RowIndex="@index"/>
                rowIndex++;
            }
        }
    </Items>
</DxMenuItem>