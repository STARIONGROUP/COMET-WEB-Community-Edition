<!------------------------------------------------------------------------------
// Copyright (c) 2023-2024 Starion Group S.A.
//
//   Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Théate Antoine, Nabil Abbar
//
//   This file is part of CDP4-COMET WEB Community Edition
//   The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25
//   Annex A and Annex C.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
------------------------------------------------------------------------------->
@namespace COMET.Web.Common.Components.ValueSetRenderers

@if (this.ArrayParameterType != null && this.Values != null)
{
    if (this.ArrayParameterType.Rank <= 2)
    {
        var dimension = this.ArrayParameterType.Dimension;
        var nbRows = dimension.First();
        var nbColumns = dimension.ElementAt(1);

        <div class="p-0">
            @for (var rowIndex = 0; rowIndex < nbRows; rowIndex++)
            {
                <div class="row m-0">
                    @for (var columnIndex = 0; columnIndex < nbColumns; columnIndex++)
                    {
                        var scale = this.ArrayParameterType.Component.ElementAt(rowIndex * nbRows + columnIndex).Scale;

                        <ScalarParameter Value="@(this.Values.ElementAt(rowIndex * nbRows + columnIndex))"
                                         Scale="@scale"/>
                    }
                </div>
            }
        </div>
    }
    else
    {
        var dimension = this.ArrayParameterType.Dimension;
        var nbRows = dimension.First();
        var nbColumns = dimension.ElementAt(1);
        var nbLayers = dimension.ElementAt(2);
        <div class="p-0">
            @for (var z = 1; z <= nbLayers; z++)
            {
                <div class="row m-0 justify-content-center">
                    z = @z:
                </div>
                @for (var rowIndex = 0; rowIndex < nbRows; rowIndex++)
                {
                    <div class="row m-0">
                        @for (var columnIndex = 0; columnIndex < nbColumns; columnIndex++)
                        {
                            var scale = this.ArrayParameterType.Component.ElementAt(rowIndex * nbRows + columnIndex).Scale;
                            <ScalarParameter Value="@(this.Values.ElementAt(rowIndex * nbRows + columnIndex))"
                                             Scale="@scale"/>
                        }
                    </div>
                }
            }
        </div>
    }
}