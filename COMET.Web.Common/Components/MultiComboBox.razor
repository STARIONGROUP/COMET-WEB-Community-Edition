<!------------------------------------------------------------------------------
// Copyright (c) 2023-2024 Starion Group S.A.
//
//   Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Théate Antoine, Nabil Abbar
//
//   This file is part of CDP4-COMET WEB Community Edition
//   The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25
//   Annex A and Annex C.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
------------------------------------------------------------------------------->
@namespace COMET.Web.Common.Components
@typeparam TItem

<DxComboBox TValue="TItem"
            TData="TItem"
            Data="@this.Data"
            ValueChanged="@this.ItemSelected"
            Enabled="@this.Enabled"
            ReadOnly="@(this.IsReadOnly)"
            Value="@this.lastSelectedValue"
            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
            CssClass="w-100">
    <ItemTemplate>
        <div class="multi-combo-item-template">
            @if (this.ShowCheckBoxes)
            {
                var isSelected = this.Values.Contains(context);
                <DxCheckBox CssClass="item-template-checkbox" Checked="@isSelected"></DxCheckBox>
            }
            
            @if (this.RowTemplate != null)
            {
                @this.RowTemplate(context)
            }
            else
            {
                <span>@context.ToString()</span>
            }
        </div>
    </ItemTemplate>

    <EditBoxTemplate>
        @if(this.Values.Count <= this.MaxNumberOfChips)
        {
            <div class="chips-container">
                @foreach(var value in this.Values)
                {
                    <div class="chip">
                        @if (this.RowTemplate != null)
                        {
                            @this.RowTemplate(value)
                        }
                        else
                        {
                            @value
                        }
                        <button class="chip-button icon icon-close" @onclick="@(() => this.ItemSelected(value))"></button>
                    </div>
                }
            </div>
        }
        else
        {
            if (this.EditorTextTemplate != null)
            {
                @this.EditorTextTemplate
            }
            else
            {
                <div>@(this.Values.Count) items are selected</div>
            }
        }
    </EditBoxTemplate>
</DxComboBox>