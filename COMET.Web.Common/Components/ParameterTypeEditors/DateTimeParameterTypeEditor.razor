<!------------------------------------------------------------------------------
// Copyright (c) 2023-2024 Starion Group S.A.
//
//   Authors: Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar, Théate Antoine, Nabil Abbar
//
//   This file is part of CDP4-COMET WEB Community Edition
//   The CDP4-COMET WEB Community Edition is the Starion Web Application implementation of ECSS-E-TM-10-25
//   Annex A and Annex C.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
------------------------------------------------------------------------------->
@namespace COMET.Web.Common.Components.ParameterTypeEditors
@inherits DisposableComponent
@using System.Globalization

@{
    var dateTimeStringSplitted = this.ViewModel.ValueArray[this.ViewModel.ValueArrayIndex].Split('T');
    var timeSpan = TimeSpan.Zero;

    if (!DateTime.TryParse(dateTimeStringSplitted[0], out var dateTime))
    {
        dateTime = default;
    }
    else
    {
        var timeString = dateTimeStringSplitted[1];
        var values = timeString.Split(':');

        int.TryParse(values[0], out var hours);
        int.TryParse(values[1], out var minutes);
        int.TryParse(values[2], out var seconds);

        timeSpan = new TimeSpan(hours, minutes, seconds);
    }

    <DxDateEdit CssClass="date-time-parameter-type cw-320"
                Date="@dateTime"
                ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                DateChanged="@((DateTime date) => this.ViewModel.OnParameterValueChanged(date))"
                NullText="Select a date..." 
                ReadOnly="this.ViewModel.IsReadOnly"/>
                
    <DxTimeEdit Time="@timeSpan" CssClass="cw-320"
                TimeChanged="@((TimeSpan time) => this.ViewModel.OnParameterValueChanged(time))"
                ReadOnly="this.ViewModel.IsReadOnly" />

    <ValidationMessageComponent ValidationMessage="@this.ViewModel.ValidationMessage" />
}
